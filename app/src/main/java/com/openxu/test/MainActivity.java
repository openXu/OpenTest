package com.openxu.test;

import android.app.Activity;
import android.graphics.Color;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.text.Html;
import android.text.Spannable;
import android.text.SpannableString;
import android.text.SpannableStringBuilder;
import android.text.Spanned;
import android.text.TextUtils;
import android.text.method.LinkMovementMethod;
import android.text.style.ClickableSpan;
import android.text.style.URLSpan;
import android.util.Log;
import android.view.View;
import android.widget.TextView;

import java.util.ArrayList;
import java.util.List;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class MainActivity extends Activity {

    private String TAG = "MainActivity";
    /**
     *tv_test1的作用仅仅是识别url，它是隐藏的，在布局中需要添加它，并设置android:autoLink="web"
     * */
    TextView tv_test1;
    /**
     * 真正展示的TextView，不能设置android:autoLink="web"
     */
    TextView tv_test;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        tv_test = (TextView)findViewById(R.id.tv_test);
        tv_test1 = (TextView)findViewById(R.id.tv_test1);
        String testStr = "哈哈哈http://blog.csdn.net/zhaoyanjun6/article/details/72284027 哈哈哈http://www.gulixueyuan.com/course/57/learn#lesson/1010好啊";
        //此处设置超链接字体大小和颜色无效，字体大小和默认字体颜色在布局中设置，超链接的颜色是系统的colorAccent
//        s1 += "<a href=\"http://blog.csdn.net\"><font size=\"7\" color=\"#FF0000\">http://www.baidu.com</font></a>";
//        tv_test.setMovementMethod(LinkMovementMethod.getInstance());
//        tv_test.setText(Html.fromHtml(getHtmlText(s1)));

       /* tv_test.setOnLongClickListener(new View.OnLongClickListener() {
            @Override
            public boolean onLongClick(View v) {
                tv_test.setTag(android.R.id.long_click,true);
                return true;
            }
        });*/

        getClickableSpan(tv_test, testStr);
    }


    private void getClickableSpan(TextView textView, String str) {
        String newText = new String(str);
        List<String> urlList = new ArrayList<>();
        List<String> showUrlList = new ArrayList<>();

        /*让TextView识别Url，布局文件中需要为为TextView设置android:autoLink="web"*/
        tv_test1.setText(str);
        if(tv_test1.getText() instanceof Spannable){
            Spannable span = (Spannable)(tv_test1.getText());
            URLSpan[] urls = span.getSpans(0, span.length(), URLSpan.class);
            for(final URLSpan urlSpan : urls) {
                String url = urlSpan.getURL();
                Log.w(TAG, "截取到url="+url);

                String showUrl = getShowUrl(url);
                newText = newText.replace(url, showUrl);
                urlList.add(urlSpan.getURL());
                showUrlList.add(showUrl);
                Log.w(TAG, "替换之后"+newText);
/*
                int start = span.toString().indexOf(url);
                int end = start + url.length();
                if (start == -1) {
                    if (url.contains("http://")) {
                        url = url.replace("http://", "");
                    } else if (url.contains("https://")) {
                        url = url.replace("https://", "");
                    } else if (url.contains("rtsp://")) {
                        url = url.replace("rtsp://", "");
                    }
                    start = span.toString().indexOf(url);
                    end = start + url.length();
                }
                if (start != -1) {
                    span.removeSpan(urlSpan);
                    span.setSpan(new AutolinkSpan(url), start
                            , end, Spanned.SPAN_INCLUSIVE_INCLUSIVE);
                }*/
            }

            span = new SpannableStringBuilder(newText);

            /**为链接设置点击事件*/
            for(int i = 0; i<urlList.size(); i++){
                setLinkClickable((SpannableStringBuilder)span, newText,urlList.get(i), showUrlList.get(i));
            }
            //将新的内容设置给TextView
            textView.setText(span);
            // 在单击链接时凡是有要执行的动作，都必须设置MovementMethod对象
            textView.setMovementMethod(LinkMovementMethod.getInstance());
            // 设置点击后的颜色，这里涉及到ClickableSpan的点击背景
            textView.setHighlightColor(Color.parseColor("#ff0000"));
        }
    }

    /**创建点击Span*/
    private void setLinkClickable(SpannableStringBuilder spanBuild, String newText,String url,String showUrl) {
        int start = newText.indexOf(showUrl);
        int end = start+showUrl.length();
        Log.w(TAG, "为"+showUrl+"设置点击 start="+start+"   end="+end);
        AutolinkSpan clickSpan = new AutolinkSpan(this, url);
        spanBuild.setSpan(clickSpan, start, end, Spanned.SPAN_INCLUSIVE_INCLUSIVE);
    }

    /**获取链接域名*/
    private String getShowUrl(String url) {
        String head = "";
        if(!TextUtils.isEmpty(url)){
            if(url.contains("http://")){
                url = url.replace("http://", "");
            }else if(url.contains("https://")){
                url = url.replace("https://", "");
            }
            head = url.substring(0, url.indexOf("/"));
        }
        Log.d(TAG, "截取到头部"+head);
        return head;
    }
}
